FILE fqName:<root> fileName:/testWithKind.kt
  CLASS ENUM_CLASS name:ExprId modality:FINAL visibility:public superTypes:[kotlin.Enum<<root>.ExprId>]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.ExprId
    CONSTRUCTOR visibility:private <> () returnType:<root>.ExprId [primary]
      BLOCK_BODY
        ENUM_CONSTRUCTOR_CALL 'public constructor <init> (name: kotlin.String, ordinal: kotlin.Int) [primary] declared in kotlin.Enum'
          <E>: <root>.ExprId
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS ENUM_CLASS name:ExprId modality:FINAL visibility:public superTypes:[kotlin.Enum<<root>.ExprId>]'
    ENUM_ENTRY name:BinOp
      init: EXPRESSION_BODY
        ENUM_CONSTRUCTOR_CALL 'private constructor <init> () [primary] declared in <root>.ExprId'
    ENUM_ENTRY name:Number
      init: EXPRESSION_BODY
        ENUM_CONSTRUCTOR_CALL 'private constructor <init> () [primary] declared in <root>.ExprId'
    ENUM_ENTRY name:String
      init: EXPRESSION_BODY
        ENUM_CONSTRUCTOR_CALL 'private constructor <init> () [primary] declared in <root>.ExprId'
    FUN ENUM_CLASS_SPECIAL_MEMBER name:values visibility:public modality:FINAL <> () returnType:kotlin.Array<<root>.ExprId>
      SYNTHETIC_BODY kind=ENUM_VALUES
    FUN ENUM_CLASS_SPECIAL_MEMBER name:valueOf visibility:public modality:FINAL <> (value:kotlin.String) returnType:<root>.ExprId
      VALUE_PARAMETER name:value index:0 type:kotlin.String
      SYNTHETIC_BODY kind=ENUM_VALUEOF
    FUN FAKE_OVERRIDE name:clone visibility:protected modality:FINAL <> ($this:kotlin.Enum<E of kotlin.Enum>) returnType:kotlin.Any [fake_override]
      overridden:
        protected final fun clone (): kotlin.Any declared in kotlin.Enum
      $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<E of kotlin.Enum>
    FUN FAKE_OVERRIDE name:compareTo visibility:public modality:FINAL <> ($this:kotlin.Enum<E of kotlin.Enum>, other:<root>.ExprId) returnType:kotlin.Int [fake_override,operator]
      overridden:
        public final fun compareTo (other: E of kotlin.Enum): kotlin.Int [operator] declared in kotlin.Enum
      $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<E of kotlin.Enum>
      VALUE_PARAMETER name:other index:0 type:<root>.ExprId
    FUN FAKE_OVERRIDE name:equals visibility:public modality:FINAL <> ($this:kotlin.Enum<E of kotlin.Enum>, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public final fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Enum
      $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<E of kotlin.Enum>
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:FINAL <> ($this:kotlin.Enum<E of kotlin.Enum>) returnType:kotlin.Int [fake_override]
      overridden:
        public final fun hashCode (): kotlin.Int declared in kotlin.Enum
      $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<E of kotlin.Enum>
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Enum<E of kotlin.Enum>) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Enum
      $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<E of kotlin.Enum>
    PROPERTY FAKE_OVERRIDE name:name visibility:public modality:FINAL [fake_override,val]
      annotations:
        IntrinsicConstEvaluation
      overridden:
        public final name: kotlin.String [val]
      FUN FAKE_OVERRIDE name:<get-name> visibility:public modality:FINAL <> ($this:kotlin.Enum<E of kotlin.Enum>) returnType:kotlin.String [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:name visibility:public modality:FINAL [fake_override,val]
        overridden:
          public final fun <get-name> (): kotlin.String declared in kotlin.Enum
        $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<E of kotlin.Enum>
    PROPERTY FAKE_OVERRIDE name:ordinal visibility:public modality:FINAL [fake_override,val]
      overridden:
        public final ordinal: kotlin.Int [val]
      FUN FAKE_OVERRIDE name:<get-ordinal> visibility:public modality:FINAL <> ($this:kotlin.Enum<E of kotlin.Enum>) returnType:kotlin.Int [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:ordinal visibility:public modality:FINAL [fake_override,val]
        overridden:
          public final fun <get-ordinal> (): kotlin.Int declared in kotlin.Enum
        $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<E of kotlin.Enum>
    FUN FAKE_OVERRIDE name:getDeclaringClass visibility:public modality:FINAL <> ($this:kotlin.Enum<E of kotlin.Enum>) returnType:@[FlexibleNullability] java.lang.Class<@[FlexibleNullability] <root>.ExprId?>? [fake_override]
      overridden:
        public final fun getDeclaringClass (): @[FlexibleNullability] java.lang.Class<@[FlexibleNullability] E of kotlin.Enum?>? declared in kotlin.Enum
      $this: VALUE_PARAMETER name:<this> type:kotlin.Enum<E of kotlin.Enum>
  CLASS INTERFACE name:FirElement modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    annotations:
      WithAbstractKind
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.FirElement
    FUN GENERATED[AddAbstractGetKindFunctionExtensionKey] name:getKind visibility:public modality:ABSTRACT <> ($this:<root>.FirElement) returnType:<root>.ExprId
      $this: VALUE_PARAMETER name:<this> type:<root>.FirElement
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:FirBinOp modality:FINAL visibility:public superTypes:[<root>.FirElement]
    annotations:
      WithKind(kind = 'BinOp')
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.FirBinOp
    CONSTRUCTOR visibility:public <> () returnType:<root>.FirBinOp [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:FirBinOp modality:FINAL visibility:public superTypes:[<root>.FirElement]'
    FUN GENERATED[AddGetKindFunctionExtensionKey] name:getKind visibility:public modality:FINAL <> ($this:<root>.FirBinOp) returnType:<root>.ExprId
      overridden:
        public abstract fun getKind (): <root>.ExprId declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:<root>.FirBinOp
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun getKind (): <root>.ExprId declared in <root>.FirBinOp'
          GET_ENUM 'ENUM_ENTRY name:BinOp' type=<root>.ExprId
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int [fake_override] declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String [fake_override] declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:FirNumber modality:FINAL visibility:public superTypes:[<root>.FirElement]
    annotations:
      WithKind(kind = 'Number')
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.FirNumber
    CONSTRUCTOR visibility:public <> () returnType:<root>.FirNumber [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:FirNumber modality:FINAL visibility:public superTypes:[<root>.FirElement]'
    FUN GENERATED[AddGetKindFunctionExtensionKey] name:getKind visibility:public modality:FINAL <> ($this:<root>.FirNumber) returnType:<root>.ExprId
      overridden:
        public abstract fun getKind (): <root>.ExprId declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:<root>.FirNumber
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun getKind (): <root>.ExprId declared in <root>.FirNumber'
          GET_ENUM 'ENUM_ENTRY name:Number' type=<root>.ExprId
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int [fake_override] declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String [fake_override] declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:FirString modality:FINAL visibility:public superTypes:[<root>.FirElement]
    annotations:
      WithKind(kind = 'String')
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.FirString
    CONSTRUCTOR visibility:public <> () returnType:<root>.FirString [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:FirString modality:FINAL visibility:public superTypes:[<root>.FirElement]'
    FUN GENERATED[AddGetKindFunctionExtensionKey] name:getKind visibility:public modality:FINAL <> ($this:<root>.FirString) returnType:<root>.ExprId
      overridden:
        public abstract fun getKind (): <root>.ExprId declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:<root>.FirString
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun getKind (): <root>.ExprId declared in <root>.FirString'
          GET_ENUM 'ENUM_ENTRY name:String' type=<root>.ExprId
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int [fake_override] declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String [fake_override] declared in <root>.FirElement
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FUN name:testAbstract visibility:public modality:FINAL <> (node:<root>.FirElement) returnType:kotlin.Boolean
    VALUE_PARAMETER name:node index:0 type:<root>.FirElement
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun testAbstract (node: <root>.FirElement): kotlin.Boolean declared in <root>'
        BLOCK type=kotlin.Boolean origin=WHEN
          VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:<root>.ExprId [val]
            CALL 'public abstract fun getKind (): <root>.ExprId declared in <root>.FirElement' type=<root>.ExprId origin=null
              $this: GET_VAR 'node: <root>.FirElement declared in <root>.testAbstract' type=<root>.FirElement origin=null
          WHEN type=kotlin.Boolean origin=WHEN
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp_0: <root>.ExprId [val] declared in <root>.testAbstract' type=<root>.ExprId origin=null
                arg1: GET_ENUM 'ENUM_ENTRY name:BinOp' type=<root>.ExprId
              then: CONST Boolean type=kotlin.Boolean value=true
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CONST Boolean type=kotlin.Boolean value=false
  FUN name:testDirect visibility:public modality:FINAL <> (node:<root>.FirBinOp) returnType:kotlin.Boolean
    VALUE_PARAMETER name:node index:0 type:<root>.FirBinOp
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun testDirect (node: <root>.FirBinOp): kotlin.Boolean declared in <root>'
        BLOCK type=kotlin.Boolean origin=WHEN
          VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:<root>.ExprId [val]
            CALL 'public final fun getKind (): <root>.ExprId declared in <root>.FirBinOp' type=<root>.ExprId origin=null
              $this: GET_VAR 'node: <root>.FirBinOp declared in <root>.testDirect' type=<root>.FirBinOp origin=null
          WHEN type=kotlin.Boolean origin=WHEN
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp_1: <root>.ExprId [val] declared in <root>.testDirect' type=<root>.ExprId origin=null
                arg1: GET_ENUM 'ENUM_ENTRY name:BinOp' type=<root>.ExprId
              then: CONST Boolean type=kotlin.Boolean value=true
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CONST Boolean type=kotlin.Boolean value=false
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      VAR name:node type:<root>.FirBinOp [val]
        CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.FirBinOp' type=<root>.FirBinOp origin=null
      WHEN type=kotlin.Nothing origin=IF
        BRANCH
          if: WHEN type=kotlin.Boolean origin=ANDAND
            BRANCH
              if: CALL 'public final fun testAbstract (node: <root>.FirElement): kotlin.Boolean declared in <root>' type=kotlin.Boolean origin=null
                node: GET_VAR 'val node: <root>.FirBinOp [val] declared in <root>.box' type=<root>.FirBinOp origin=null
              then: CALL 'public final fun testDirect (node: <root>.FirBinOp): kotlin.Boolean declared in <root>' type=kotlin.Boolean origin=null
                node: GET_VAR 'val node: <root>.FirBinOp [val] declared in <root>.box' type=<root>.FirBinOp origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CONST Boolean type=kotlin.Boolean value=false
          then: RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
            CONST String type=kotlin.String value="OK"
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
            CONST String type=kotlin.String value="FAIL"
