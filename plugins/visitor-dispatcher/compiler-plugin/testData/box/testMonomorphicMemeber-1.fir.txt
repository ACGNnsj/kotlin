FILE: testMonomorphicMemeber-1.kt
    public open class Base : R|kotlin/Any| {
        public constructor(): R|Base| {
            super<R|kotlin/Any|>()
        }

    }
    public final class Derived : R|Base| {
        public constructor(): R|Derived| {
            super<R|Base|>()
        }

    }
    public abstract class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public abstract fun <@R|org/jetbrains/kotlin/specialization/Monomorphic|() T : R|Base|> f(x: R|T|): R|kotlin/Unit|

    }
    public abstract class B : R|A| {
        public constructor(): R|B| {
            super<R|A|>()
        }

    }
    public final class C : R|B| {
        public constructor(): R|C| {
            super<R|B|>()
        }

        public final override fun <@R|org/jetbrains/kotlin/specialization/Monomorphic|() T : R|Base|> f(x: R|T|): R|kotlin/Unit| {
        }

    }
    public final fun box(): R|kotlin/String| {
        lval derived: R|Derived| = R|/Derived.Derived|()
        lval c: R|C| = R|/C.C|()
        R|<local>/c|.R|/C.f|<R|Derived|>(R|<local>/derived|)
        ^box String(OK)
    }
