// DO NOT EDIT MANUALLY!
// Generated by org/jetbrains/kotlin/generators/arguments/GenerateGradleOptions.kt
// To regenerate run 'generateGradleOptions' task
@file:Suppress("RemoveRedundantQualifierName", "Deprecation", "DuplicatedCode")

package org.jetbrains.kotlin.gradle.dsl

open class CompilerJvmOptionsDsl (
    private val optionsAccessor: ((org.jetbrains.kotlin.gradle.dsl.CompilerJvmOptions) -> Unit) -> Unit
)  : org.jetbrains.kotlin.gradle.dsl.CompilerCommonOptionsDsl(optionsAccessor) {

    /**
     * Generate metadata for Java 1.8 reflection on method parameters
     * Default value: false
     */
    fun javaParameters(value: kotlin.Boolean) {
        optionsAccessor { it.javaParameters.set(value) }
    }

    /**
     * Target version of the generated JVM bytecode (1.8, 9, 10, ..., 18), default is 1.8
     * Possible values: "1.8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18"
     * Default value: null
     */
    fun jvmTarget(value: org.jetbrains.kotlin.gradle.dsl.JvmTarget?) {
        optionsAccessor { it.jvmTarget.set(value) }
    }

    /**
     * Name of the generated .kotlin_module file
     * Default value: null
     */
    fun moduleName(value: kotlin.String?) {
        optionsAccessor { it.moduleName.set(value) }
    }

    /**
     * Don't automatically include the Java runtime into the classpath
     * Default value: false
     */
    fun noJdk(value: kotlin.Boolean) {
        optionsAccessor { it.noJdk.set(value) }
    }

    /**
     * Use the old JVM backend
     * Default value: false
     */
    fun useOldBackend(value: kotlin.Boolean) {
        optionsAccessor { it.useOldBackend.set(value) }
    }
}
